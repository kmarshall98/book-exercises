# Install the `"nycflights13"` package. Load (`library()`) the package.
# You'll also need to load `dplyr`
install.packages("nycflights13")
library("nycflights13")
View("nycflights13")
View("nflights")
View("flights")
load("nycflights13")
View("flights")
View(flights)
library("dplyr")
# The data frame `flights` should now be accessible to you.
# Use functions to inspect it: how many rows and columns does it have?
# What are the names of the columns?
# Use `??flights` to search for documentation on the data set (for what the
# columns represent)
row_num <- nrow(flights)
col_num <- ncol(flights)
col_names <- select(flights,)
col_names <- select(,flights)
colnames(flights)
??flights
# Use `dplyr` to give the data frame a new column that is the amount of time
# gained or lost while flying (that is: how much of the delay arriving occured
# during flight, as opposed to before departing).
flights <- mutate(flights, arrival_delay = arr_time - scheduled_arr_time)
# Use `dplyr` to give the data frame a new column that is the amount of time
# gained or lost while flying (that is: how much of the delay arriving occured
# during flight, as opposed to before departing).
flights <- mutate(flights, arrival_delay = arr_time - sched_arr_time)
View(flights)
# Use `dplyr` to sort your data frame in descending order by the column you just
# created. Remember to save this as a variable (or in the same one!)
flights <- arrange(flights, -arrival_delay)
View(flights)
# Use `dplyr` to sort your data frame in descending order by the column you just
# created. Remember to save this as a variable (or in the same one!)
arrival_delay <- arrange(flights, -arrival_delay)
View(flights)
View(flights)
arrival_delay <- flights %>%
mutate(arr_time - sched_arr_time) %>%
arrange()
View(flights)
arrival_delay <- flights %>%
mutate(arr_time - sched_arr_time) %>%
arrange(-)
arrival_delay <- flights %>%
mutate(arrival_delay_var = arr_time - sched_arr_time) %>%
arrange(-arrival_delay_var)
View(flights)
flights <- mutate(flights, arrival_delay = arr_time - sched_arr_time)
# Use `dplyr` to sort your data frame in descending order by the column you just
# created. Remember to save this as a variable (or in the same one!)
arrival_delay <- arrange(flights, -arrival_delay)
View(flights)
# Make a histogram of the amount of time gained using the `hist()` function
hist(flights, arrival_delay > 0)
# Make a histogram of the amount of time gained using the `hist()` function
hist(arrival_delay > 0)
